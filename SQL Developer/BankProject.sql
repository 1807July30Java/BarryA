--ADDING A TIME TO THE TABLE TRANSACTION
ALTER TABLE BANK_TRANSACTIONS
MODIFY TRANS_TIME TIMESTAMP;

--ADDING A COLUMN ABOUT DESCRIPTION OF TRANSACTION
ALTER TABLE BANK_TRANSACTIONS
ADD TRANS_DESCRIPTION VARCHAR(100);

--CHANGING BANK_CLIENT - USER_ID --> CLIENT_ID
ALTER TABLE BANK_CLIENT
RENAME COLUMN USER_ID TO CLIENT_ID;


--CREATING SEQUENCES
        --SEQUENCE FOR BANK_CLIENT
CREATE SEQUENCE SQ_BANK_CLIENT_PK
START WITH 11
INCREMENT BY 1; 
/
        --SEQUENCE FOR BANK_ACCOUNT
CREATE SEQUENCE SQ_BANK_ACCOUNT_PK
START WITH 11
INCREMENT BY 1;
/
        --SEQUENCE FOR BANK_TRANSACTIONS
CREATE SEQUENCE SQ_BANK_TRANSACTIONS_PK
START WITH 11
INCREMENT BY 1;
/


-- STARTING TRIGGERS
        --FOR BANK_CLIENT TABLE
CREATE OR REPLACE TRIGGER TR_INSERT_BANK_CLIENT
BEFORE INSERT ON BANK_CLIENT
FOR EACH ROW
BEGIN
    SELECT SQ_BANK_CLIENT_PK.NEXTVAL INTO :NEW.CLIENT_ID FROM DUAL;
END;

        --FOR BANK_ACCOUNT TABLE
CREATE OR REPLACE TRIGGER TR_INSERT_BANK_ACCOUNT
BEFORE INSERT ON BANK_ACCOUNT
FOR EACH ROW
BEGIN
    SELECT SQ_BANK_ACCOUNT_PK.NEXTVAL INTO :NEW.ACCOUNT_ID FROM DUAL;
END;

        --FOR BANK_TRANSACTIONS
CREATE OR REPLACE TRIGGER TR_INSERT_BANK_TRANSACTIONS
BEFORE INSERT ON BANK_TRANSACTIONS
FOR EACH ROW
BEGIN
    SELECT SQ_BANK_TRANSACTIONS_PK.NEXTVAL INTO :NEW.TRANSACTION_ID FROM DUAL;
END;      


--TESTING SEQUENCES AND TRIGGERS
INSERT INTO BANK_CLIENT (USER_NAME,PASSWORD, FIRST_NAME,LAST_NAME)
VALUES('Alphonso','TEP','ALPHA','BARRY');                               --> SUCCESSFUL TEST
DELETE FROM BANK_CLIENT 
WHERE FIRST_NAME = 'ALPHA';                                             --> REMOVED TEST









